{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpensesDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpenses/ExpensesForm.js","components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","e","onFilterredYear","target","ExpensesDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","transactions","length","map","expense","id","ChartBar","chartBarHeight","maxValue","Math","round","style","height","label","Chart","dataPointValue","dataPoints","dataPoint","maximumValue","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","setYear","filterYearExpenses","data","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveNewExpense","type","min","step","onClick","closeForm","NewExpenses","openForm","setOpenForm","newExpense","newExpenseFunc","random","onNewExpense","SAMPLE_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c7e3239.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props) {\r\n  const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import './ExpenseFilter.css';\r\nconst ExpenseFilter = props => {\r\n  const yearFilterChoice = e => {\r\n    props.onFilterredYear(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={yearFilterChoice}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import './ExpensesDate.css';\r\nfunction ExpensesDate(props) {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpensesDate;\r\n","import ExpensesDate from './ExpensesDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\nfunction ExpenseItem(props) {\n  return (\n    <Card className=\"expense-item\">\n      <ExpensesDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n  if (props.transactions.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses Found.</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expense-list\">\r\n      {props.transactions.map(expense => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          id={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n  let chartBarHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    chartBarHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: chartBarHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from './ChartBar';\r\nimport './Chart.css';\r\nconst Chart = props => {\r\n  const dataPointValue = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const maximumValue = Math.max(...dataPointValue);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map(dataPoint => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          key={dataPoint.label}\r\n          maxValue={maximumValue}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expensesMonth = expense.date.getMonth(); //starts at 0 => January => 0\r\n    chartDataPoints[expensesMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\nimport './Expenses.css';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nfunction Expenses(props) {\r\n  const [year, setYear] = useState('2021');\r\n\r\n  const choosenYearHandler = selectedYear => {\r\n    setYear(selectedYear);\r\n  };\r\n\r\n  const filterYearExpenses = props.data.filter(expense => {\r\n    if (expense.date.getFullYear().toString() === year) {\r\n      return expense;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter selected={year} onFilterredYear={choosenYearHandler} />\r\n        <ExpensesChart expenses={filterYearExpenses} />\r\n        <ExpensesList transactions={filterYearExpenses} />\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\nimport './ExpensesForm.css';\r\n\r\nconst ExpenseForm = props => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  const titleChangeHandler = e => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = e => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n  const dateChangeHandler = e => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      date: new Date(enteredDate),\r\n      amount: enteredAmount,\r\n    };\r\n    props.onSaveNewExpense(expenseData);\r\n    setEnteredDate('');\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-0101\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button className=\"button\" onClick={props.closeForm}>\r\n          Cancel\r\n        </button>\r\n        <button className=\"sumbit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\nimport ExpenseForm from './ExpensesForm';\r\nimport './NewExpenses.css';\r\n\r\nconst NewExpenses = props => {\r\n  const [openForm, setOpenForm] = useState(false);\r\n  const addNewExpenseHandler = newExpense => {\r\n    const newExpenseFunc = {\r\n      ...newExpense,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onNewExpense(newExpenseFunc);\r\n    setOpenForm(false);\r\n  };\r\n\r\n  const openFormHandler = () => setOpenForm(true);\r\n  const closeFormHandler = () => setOpenForm(false);\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!openForm && <button onClick={openFormHandler}>Add New Expense</button>}\r\n      {openForm && (\r\n        <ExpenseForm\r\n          onSaveNewExpense={addNewExpenseHandler}\r\n          closeForm={closeFormHandler}\r\n        ></ExpenseForm>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpenses;\r\n","import Expenses from './components/Expenses/Expenses';\nimport NewExpenses from './components/NewExpenses/NewExpenses';\nimport React, { useState } from 'react';\nconst SAMPLE_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450.09,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(SAMPLE_EXPENSES);\n\n  const addNewExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...SAMPLE_EXPENSES];\n    });\n  };\n  return (\n    <div>\n      <h2>My React Expenses Component!</h2>\n      <NewExpenses onNewExpense={addNewExpenseHandler} />\n      <Expenses data={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}